services:
  webrtc-bridge:
    # Receives ROS 2 WebRTC-data (as server) and publish as ROS-Images
    build:
      context: ./
      dockerfile: ./docker/Dockerfile
      args:
        ROS_DISTRO: jazzy
    ports:
      - 9999:9999

  # WebSocket/ROS 2 - Signaling Server
  signaling:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile-signaling
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - 9080:9080

  viz:
    # ros2 image viewer to visualize
    image: image_viz
    build:
      context: ./
      dockerfile: ./docker/Dockerfile-img-viz
      args:
        ROS_DISTRO: jazzy
    environment:
      - QT_QPA_PLATFORM=wayland
      - XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR}
      - WAYLAND_DISPLAY=${WAYLAND_DISPLAY}
    volumes:
      - ${XDG_RUNTIME_DIR}/${WAYLAND_DISPLAY}:${XDG_RUNTIME_DIR}/${WAYLAND_DISPLAY}:ro
    devices:
      - /dev/dri:/dev/dri

  cam:
    # provide the local camera and sends data (client)
    # see webrtc_sender/webrtc_sender.py
    image: webrtc_camera
    build:
      context: ./
      dockerfile: ./docker/Dockerfile-cam
      args:
        ROS_DISTRO: jazzy
    devices:
    - /dev/video0:/dev/video0
    # privileged is required for video devices!
    privileged: true

  frontend:
    # Web frontend
    image: webrtc_frontend
    build:
      context: ./svelte-robot-control/
      dockerfile: Dockerfile
